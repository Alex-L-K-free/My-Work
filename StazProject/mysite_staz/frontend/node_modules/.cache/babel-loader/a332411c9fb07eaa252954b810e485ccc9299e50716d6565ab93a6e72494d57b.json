{"ast":null,"code":"\n\n// import React, { useState } from 'react';\n// import axios from 'axios';\n//\n// const Login = ({ setToken }) => {\n//     // Состояния для хранения данных формы\n//     const [username, setUsername] = useState('');\n//     const [password, setPassword] = useState('');\n//     const [error, setError] = useState('');\n//\n//     // Обработчик отправки формы\n//     const handleSubmit = async (e) => {\n//         e.preventDefault();\n//         setError('');  // Сбрасываем ошибку перед новым запросом\n//\n//         try {\n//             const response = await axios.post('http://localhost:8000/api/token/', {\n//                 username: username,\n//                 password: password,\n//             });\n//\n//             // Если авторизация успешна, сохраняем токен в state\n//             setToken(response.data.access);\n//             localStorage.setItem('access_token', response.data.access);  // Сохраняем токен в localStorage для последующего использования\n//\n//             // Очищаем форму\n//             setUsername('');\n//             setPassword('');\n//         } catch (err) {\n//             setError('Неверные данные. Попробуйте снова.');\n//         }\n//     };\n//\n//     return (\n//         <div className=\"login-container\">\n//             <h2>Авторизация</h2>\n//             <form onSubmit={handleSubmit}>\n//                 <div className=\"form-group\">\n//                     <label htmlFor=\"username\">Логин:</label>\n//                     <input\n//                         type=\"text\"\n//                         id=\"username\"\n//                         value={username}\n//                         onChange={(e) => setUsername(e.target.value)}\n//                         required\n//                     />\n//                 </div>\n//                 <div className=\"form-group\">\n//                     <label htmlFor=\"password\">Пароль:</label>\n//                     <input\n//                         type=\"password\"\n//                         id=\"password\"\n//                         value={password}\n//                         onChange={(e) => setPassword(e.target.value)}\n//                         required\n//                     />\n//                 </div>\n//                 {error && <div className=\"error\">{error}</div>}\n//                 <button type=\"submit\">Войти</button>\n//             </form>\n//         </div>\n//     );\n// };\n//\n// export default Login;","map":{"version":3,"names":[],"sources":["C:/Users/kiyko/MyPythonProject/StazProject/mysite_staz/frontend/src/Login.js"],"sourcesContent":["\r\n\r\n\r\n\r\n// import React, { useState } from 'react';\r\n// import axios from 'axios';\r\n//\r\n// const Login = ({ setToken }) => {\r\n//     // Состояния для хранения данных формы\r\n//     const [username, setUsername] = useState('');\r\n//     const [password, setPassword] = useState('');\r\n//     const [error, setError] = useState('');\r\n//\r\n//     // Обработчик отправки формы\r\n//     const handleSubmit = async (e) => {\r\n//         e.preventDefault();\r\n//         setError('');  // Сбрасываем ошибку перед новым запросом\r\n//\r\n//         try {\r\n//             const response = await axios.post('http://localhost:8000/api/token/', {\r\n//                 username: username,\r\n//                 password: password,\r\n//             });\r\n//\r\n//             // Если авторизация успешна, сохраняем токен в state\r\n//             setToken(response.data.access);\r\n//             localStorage.setItem('access_token', response.data.access);  // Сохраняем токен в localStorage для последующего использования\r\n//\r\n//             // Очищаем форму\r\n//             setUsername('');\r\n//             setPassword('');\r\n//         } catch (err) {\r\n//             setError('Неверные данные. Попробуйте снова.');\r\n//         }\r\n//     };\r\n//\r\n//     return (\r\n//         <div className=\"login-container\">\r\n//             <h2>Авторизация</h2>\r\n//             <form onSubmit={handleSubmit}>\r\n//                 <div className=\"form-group\">\r\n//                     <label htmlFor=\"username\">Логин:</label>\r\n//                     <input\r\n//                         type=\"text\"\r\n//                         id=\"username\"\r\n//                         value={username}\r\n//                         onChange={(e) => setUsername(e.target.value)}\r\n//                         required\r\n//                     />\r\n//                 </div>\r\n//                 <div className=\"form-group\">\r\n//                     <label htmlFor=\"password\">Пароль:</label>\r\n//                     <input\r\n//                         type=\"password\"\r\n//                         id=\"password\"\r\n//                         value={password}\r\n//                         onChange={(e) => setPassword(e.target.value)}\r\n//                         required\r\n//                     />\r\n//                 </div>\r\n//                 {error && <div className=\"error\">{error}</div>}\r\n//                 <button type=\"submit\">Войти</button>\r\n//             </form>\r\n//         </div>\r\n//     );\r\n// };\r\n//\r\n// export default Login;\r\n"],"mappings":";;AAIA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}