{"ast":null,"code":"\n\n// import React, { useState, useEffect } from 'react';\n// import axios from 'axios';\n//\n// const Dashboard = ({ token, setToken }) => {\n//     const [userData, setUserData] = useState(null);\n//     const [loading, setLoading] = useState(true);\n//     const [error, setError] = useState('');\n//\n//     // Запрос данных о пользователе при загрузке компонента\n//     useEffect(() => {\n//         if (token) {\n//             axios\n//                 .get('http://localhost:8000/api/user/', {\n//                     headers: {\n//                         Authorization: `Bearer ${token}`,\n//                     },\n//                 })\n//                 .then((response) => {\n//                     setUserData(response.data);  // Сохраняем данные пользователя\n//                     setLoading(false);\n//                 })\n//                 .catch((err) => {\n//                     setError('Ошибка при загрузке данных пользователя');\n//                     setLoading(false);\n//                 });\n//         }\n//     }, [token]);\n//\n//     // Функция для выхода из системы\n//     const handleLogout = () => {\n//         setToken('');\n//         localStorage.removeItem('access_token');  // Удаляем токен из localStorage\n//     };\n//\n//     if (loading) {\n//         return <div>Загрузка...</div>;\n//     }\n//\n//     return (\n//         <div className=\"dashboard\">\n//             {error ? (\n//                 <div>{error}</div>\n//             ) : (\n//                 <div>\n//                     <h2>Добро пожаловать, {userData ? userData.username : 'Пользователь'}!</h2>\n//                     <p>Email: {userData ? userData.email : 'Нет данных'}</p>\n//                     <button onClick={handleLogout}>Выйти</button>\n//                 </div>\n//             )}\n//         </div>\n//     );\n// };\n//\n// export default Dashboard;","map":{"version":3,"names":[],"sources":["C:/Users/kiyko/MyPythonProject/StazProject/mysite_staz/frontend/src/Dashboard.js"],"sourcesContent":["\r\n\r\n\r\n\r\n// import React, { useState, useEffect } from 'react';\r\n// import axios from 'axios';\r\n//\r\n// const Dashboard = ({ token, setToken }) => {\r\n//     const [userData, setUserData] = useState(null);\r\n//     const [loading, setLoading] = useState(true);\r\n//     const [error, setError] = useState('');\r\n//\r\n//     // Запрос данных о пользователе при загрузке компонента\r\n//     useEffect(() => {\r\n//         if (token) {\r\n//             axios\r\n//                 .get('http://localhost:8000/api/user/', {\r\n//                     headers: {\r\n//                         Authorization: `Bearer ${token}`,\r\n//                     },\r\n//                 })\r\n//                 .then((response) => {\r\n//                     setUserData(response.data);  // Сохраняем данные пользователя\r\n//                     setLoading(false);\r\n//                 })\r\n//                 .catch((err) => {\r\n//                     setError('Ошибка при загрузке данных пользователя');\r\n//                     setLoading(false);\r\n//                 });\r\n//         }\r\n//     }, [token]);\r\n//\r\n//     // Функция для выхода из системы\r\n//     const handleLogout = () => {\r\n//         setToken('');\r\n//         localStorage.removeItem('access_token');  // Удаляем токен из localStorage\r\n//     };\r\n//\r\n//     if (loading) {\r\n//         return <div>Загрузка...</div>;\r\n//     }\r\n//\r\n//     return (\r\n//         <div className=\"dashboard\">\r\n//             {error ? (\r\n//                 <div>{error}</div>\r\n//             ) : (\r\n//                 <div>\r\n//                     <h2>Добро пожаловать, {userData ? userData.username : 'Пользователь'}!</h2>\r\n//                     <p>Email: {userData ? userData.email : 'Нет данных'}</p>\r\n//                     <button onClick={handleLogout}>Выйти</button>\r\n//                 </div>\r\n//             )}\r\n//         </div>\r\n//     );\r\n// };\r\n//\r\n// export default Dashboard;\r\n"],"mappings":";;AAIA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}