{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\kiyko\\\\MyPythonProject\\\\StazProject\\\\mysite_staz\\\\frontend\\\\src\\\\Cart.js\",\n  _s = $RefreshSig$();\n// mysite_staz/frontend/src/cart.js\nimport React, { useState, useEffect } from \"react\";\nimport axios from \"axios\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Cart = () => {\n  _s();\n  const [cart, setCart] = useState([]);\n  const [error, setError] = useState(null);\n  const [loading, setLoading] = useState(true); // Установим начальное значение loading в true\n\n  useEffect(() => {\n    const fetchCart = async () => {\n      try {\n        const response = await axios.get(\"http://localhost:8000/api/cart/\");\n        setCart(response.data); // Записываем данные в состояние\n      } catch (err) {\n        setError(\"Не удалось загрузить данные о корзине.\");\n      } finally {\n        setLoading(false); // Завершаем загрузку\n      }\n    };\n    fetchCart();\n  }, []); // Пустой массив, чтобы выполнить эффект только один раз при монтировании компонента\n\n  if (loading) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: \"\\u0417\\u0430\\u0433\\u0440\\u0443\\u0437\\u043A\\u0430...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 16\n    }, this);\n  }\n  if (error) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: error\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 16\n    }, this);\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"\\u0412\\u0430\\u0448\\u0430 \\u043A\\u043E\\u0440\\u0437\\u0438\\u043D\\u0430\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n      children: cart.length === 0 ? /*#__PURE__*/_jsxDEV(\"li\", {\n        children: \"\\u0412\\u0430\\u0448\\u0430 \\u043A\\u043E\\u0440\\u0437\\u0438\\u043D\\u0430 \\u043F\\u0443\\u0441\\u0442\\u0430\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 38,\n        columnNumber: 21\n      }, this) : cart.map(item => /*#__PURE__*/_jsxDEV(\"li\", {\n        children: [item.name, \" - \", item.price, \" \\u0440\\u0443\\u0431.\"]\n      }, item.id, true, {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 25\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 34,\n    columnNumber: 9\n  }, this);\n};\n_s(Cart, \"dbHEB10jqD1KfcnvlWWDqYnB6nw=\");\n_c = Cart;\nexport default Cart;\n\n// import React, { useState, useEffect } from \"react\";\n// import axios from \"axios\";\n//\n// const Cart = () => {\n//     const [cart, setCart] = useState([]);\n//     const [error, setError] = useState(null);\n//     const [loading, setLoading] = useState(false);\n//     // const [cart, setCart] = useState([]); // Состояние для корзины\n//     // const [loading, setLoading] = useState(true); // Состояние для отслеживания загрузки\n//     // const [error, setError] = useState(null); // Состояние для ошибок\n//\n//     useEffect(() => {\n//         const fetchCart = async () => {\n//             try {\n//                 const response = await axios.get(\"http://localhost:8000/api/cart/\");\n//                 setCart(response.data);  // Записываем данные в состояние\n//             } catch (err) {\n//                 setError(\"Не удалось загрузить данные о корзине.\");\n//             } finally {\n//                 setLoading(false);  // Завершаем загрузку\n//             }\n//         };\n//\n//         fetchCart();\n//     }, []);\n//\n//     if (loading) {\n//         return <div>Загрузка...</div>;\n//     }\n//\n//     if (error) {\n//         return <div>{error}</div>;\n//     }\n//\n//     return (\n//         <div>\n//             <h2>Ваша корзина</h2>\n//             <ul>\n//                 {cart.length === 0 ? (\n//                     <li>Ваша корзина пуста</li>\n//                 ) : (\n//                     cart.map(item => (\n//                         <li key={item.id}>\n//                             {item.name} - {item.price} руб.\n//                         </li>\n//                     ))\n//                 )}\n//             </ul>\n//         </div>\n//     );\n// };\n//\n// const fetchCart = async () => {\n//     try {\n//         const response = await axios.get(\"http://localhost:8000/api/cart/\");\n//         setCart(response.data);\n//     } catch (err) {\n//         setError(\"Не удалось загрузить данные о корзине.\");\n//     } finally {\n//         setLoading(false);\n//     }\n// };\n//\n//     return (\n//       <div>\n//          {/* Ваш JSX код */}\n//       </div>\n//     );\n// };\n//\n// export default Cart;\n//\nvar _c;\n$RefreshReg$(_c, \"Cart\");","map":{"version":3,"names":["React","useState","useEffect","axios","jsxDEV","_jsxDEV","Cart","_s","cart","setCart","error","setError","loading","setLoading","fetchCart","response","get","data","err","children","fileName","_jsxFileName","lineNumber","columnNumber","length","map","item","name","price","id","_c","$RefreshReg$"],"sources":["C:/Users/kiyko/MyPythonProject/StazProject/mysite_staz/frontend/src/Cart.js"],"sourcesContent":["// mysite_staz/frontend/src/cart.js\r\nimport React, { useState, useEffect } from \"react\";\r\nimport axios from \"axios\";\r\n\r\nconst Cart = () => {\r\n    const [cart, setCart] = useState([]);\r\n    const [error, setError] = useState(null);\r\n    const [loading, setLoading] = useState(true);  // Установим начальное значение loading в true\r\n\r\n    useEffect(() => {\r\n        const fetchCart = async () => {\r\n            try {\r\n                const response = await axios.get(\"http://localhost:8000/api/cart/\");\r\n                setCart(response.data);  // Записываем данные в состояние\r\n            } catch (err) {\r\n                setError(\"Не удалось загрузить данные о корзине.\");\r\n            } finally {\r\n                setLoading(false);  // Завершаем загрузку\r\n            }\r\n        };\r\n\r\n        fetchCart();\r\n    }, []);  // Пустой массив, чтобы выполнить эффект только один раз при монтировании компонента\r\n\r\n    if (loading) {\r\n        return <div>Загрузка...</div>;\r\n    }\r\n\r\n    if (error) {\r\n        return <div>{error}</div>;\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            <h2>Ваша корзина</h2>\r\n            <ul>\r\n                {cart.length === 0 ? (\r\n                    <li>Ваша корзина пуста</li>\r\n                ) : (\r\n                    cart.map(item => (\r\n                        <li key={item.id}>\r\n                            {item.name} - {item.price} руб.\r\n                        </li>\r\n                    ))\r\n                )}\r\n            </ul>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default Cart;\r\n\r\n\r\n\r\n\r\n\r\n\r\n// import React, { useState, useEffect } from \"react\";\r\n// import axios from \"axios\";\r\n//\r\n// const Cart = () => {\r\n//     const [cart, setCart] = useState([]);\r\n//     const [error, setError] = useState(null);\r\n//     const [loading, setLoading] = useState(false);\r\n//     // const [cart, setCart] = useState([]); // Состояние для корзины\r\n//     // const [loading, setLoading] = useState(true); // Состояние для отслеживания загрузки\r\n//     // const [error, setError] = useState(null); // Состояние для ошибок\r\n//\r\n//     useEffect(() => {\r\n//         const fetchCart = async () => {\r\n//             try {\r\n//                 const response = await axios.get(\"http://localhost:8000/api/cart/\");\r\n//                 setCart(response.data);  // Записываем данные в состояние\r\n//             } catch (err) {\r\n//                 setError(\"Не удалось загрузить данные о корзине.\");\r\n//             } finally {\r\n//                 setLoading(false);  // Завершаем загрузку\r\n//             }\r\n//         };\r\n//\r\n//         fetchCart();\r\n//     }, []);\r\n//\r\n//     if (loading) {\r\n//         return <div>Загрузка...</div>;\r\n//     }\r\n//\r\n//     if (error) {\r\n//         return <div>{error}</div>;\r\n//     }\r\n//\r\n//     return (\r\n//         <div>\r\n//             <h2>Ваша корзина</h2>\r\n//             <ul>\r\n//                 {cart.length === 0 ? (\r\n//                     <li>Ваша корзина пуста</li>\r\n//                 ) : (\r\n//                     cart.map(item => (\r\n//                         <li key={item.id}>\r\n//                             {item.name} - {item.price} руб.\r\n//                         </li>\r\n//                     ))\r\n//                 )}\r\n//             </ul>\r\n//         </div>\r\n//     );\r\n// };\r\n//\r\n// const fetchCart = async () => {\r\n//     try {\r\n//         const response = await axios.get(\"http://localhost:8000/api/cart/\");\r\n//         setCart(response.data);\r\n//     } catch (err) {\r\n//         setError(\"Не удалось загрузить данные о корзине.\");\r\n//     } finally {\r\n//         setLoading(false);\r\n//     }\r\n// };\r\n//\r\n//     return (\r\n//       <div>\r\n//          {/* Ваш JSX код */}\r\n//       </div>\r\n//     );\r\n// };\r\n//\r\n// export default Cart;\r\n//\r\n"],"mappings":";;AAAA;AACA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAClD,OAAOC,KAAK,MAAM,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE1B,MAAMC,IAAI,GAAGA,CAAA,KAAM;EAAAC,EAAA;EACf,MAAM,CAACC,IAAI,EAAEC,OAAO,CAAC,GAAGR,QAAQ,CAAC,EAAE,CAAC;EACpC,MAAM,CAACS,KAAK,EAAEC,QAAQ,CAAC,GAAGV,QAAQ,CAAC,IAAI,CAAC;EACxC,MAAM,CAACW,OAAO,EAAEC,UAAU,CAAC,GAAGZ,QAAQ,CAAC,IAAI,CAAC,CAAC,CAAE;;EAE/CC,SAAS,CAAC,MAAM;IACZ,MAAMY,SAAS,GAAG,MAAAA,CAAA,KAAY;MAC1B,IAAI;QACA,MAAMC,QAAQ,GAAG,MAAMZ,KAAK,CAACa,GAAG,CAAC,iCAAiC,CAAC;QACnEP,OAAO,CAACM,QAAQ,CAACE,IAAI,CAAC,CAAC,CAAE;MAC7B,CAAC,CAAC,OAAOC,GAAG,EAAE;QACVP,QAAQ,CAAC,wCAAwC,CAAC;MACtD,CAAC,SAAS;QACNE,UAAU,CAAC,KAAK,CAAC,CAAC,CAAE;MACxB;IACJ,CAAC;IAEDC,SAAS,CAAC,CAAC;EACf,CAAC,EAAE,EAAE,CAAC,CAAC,CAAE;;EAET,IAAIF,OAAO,EAAE;IACT,oBAAOP,OAAA;MAAAc,QAAA,EAAK;IAAW;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAK,CAAC;EACjC;EAEA,IAAIb,KAAK,EAAE;IACP,oBAAOL,OAAA;MAAAc,QAAA,EAAMT;IAAK;MAAAU,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAM,CAAC;EAC7B;EAEA,oBACIlB,OAAA;IAAAc,QAAA,gBACId,OAAA;MAAAc,QAAA,EAAI;IAAY;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,eACrBlB,OAAA;MAAAc,QAAA,EACKX,IAAI,CAACgB,MAAM,KAAK,CAAC,gBACdnB,OAAA;QAAAc,QAAA,EAAI;MAAkB;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAI,CAAC,GAE3Bf,IAAI,CAACiB,GAAG,CAACC,IAAI,iBACTrB,OAAA;QAAAc,QAAA,GACKO,IAAI,CAACC,IAAI,EAAC,KAAG,EAACD,IAAI,CAACE,KAAK,EAAC,sBAC9B;MAAA,GAFSF,IAAI,CAACG,EAAE;QAAAT,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAEZ,CACP;IACJ;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACD,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACJ,CAAC;AAEd,CAAC;AAAChB,EAAA,CA5CID,IAAI;AAAAwB,EAAA,GAAJxB,IAAI;AA8CV,eAAeA,IAAI;;AAOnB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA,IAAAwB,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}