{"ast":null,"code":"// mysite_staz/frontend/src/axiosConfig.js\n// import axios from 'axios';\n//\n// // Создаем экземпляр axios\n// const axiosInstance = axios.create({\n//     baseURL: 'http://localhost:8000/api',\n// });\n//\n// // Добавляем интерсептор для добавления заголовка Authorization\n// axiosInstance.interceptors.request.use((config) => {\n//     const token = localStorage.getItem('access_token');\n//     if (token) {\n//         config.headers.Authorization = `Bearer ${token}`;\n//     }\n//     return config;\n// }, (error) => {\n//     return Promise.reject(error);\n// });\n//\n// export default axiosInstance;\n\nimport axiosInstance from './axiosConfig';\n\n// Пример запроса в `cart.js`\nconst fetchCart = async () => {\n  try {\n    const response = await axiosInstance.get('/cart/');\n    setCart(response.data);\n  } catch (err) {\n    setError(\"Не удалось загрузить данные о корзине.\");\n  } finally {\n    setLoading(false);\n  }\n};","map":{"version":3,"names":["axiosInstance","fetchCart","response","get","setCart","data","err","setError","setLoading"],"sources":["C:/Users/kiyko/MyPythonProject/StazProject/mysite_staz/frontend/src/axiosConfig.js"],"sourcesContent":["// mysite_staz/frontend/src/axiosConfig.js\r\n// import axios from 'axios';\r\n//\r\n// // Создаем экземпляр axios\r\n// const axiosInstance = axios.create({\r\n//     baseURL: 'http://localhost:8000/api',\r\n// });\r\n//\r\n// // Добавляем интерсептор для добавления заголовка Authorization\r\n// axiosInstance.interceptors.request.use((config) => {\r\n//     const token = localStorage.getItem('access_token');\r\n//     if (token) {\r\n//         config.headers.Authorization = `Bearer ${token}`;\r\n//     }\r\n//     return config;\r\n// }, (error) => {\r\n//     return Promise.reject(error);\r\n// });\r\n//\r\n// export default axiosInstance;\r\n\r\nimport axiosInstance from './axiosConfig';\r\n\r\n// Пример запроса в `cart.js`\r\nconst fetchCart = async () => {\r\n    try {\r\n        const response = await axiosInstance.get('/cart/');\r\n        setCart(response.data);\r\n    } catch (err) {\r\n        setError(\"Не удалось загрузить данные о корзине.\");\r\n    } finally {\r\n        setLoading(false);\r\n    }\r\n};\r\n\r\n"],"mappings":"AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,OAAOA,aAAa,MAAM,eAAe;;AAEzC;AACA,MAAMC,SAAS,GAAG,MAAAA,CAAA,KAAY;EAC1B,IAAI;IACA,MAAMC,QAAQ,GAAG,MAAMF,aAAa,CAACG,GAAG,CAAC,QAAQ,CAAC;IAClDC,OAAO,CAACF,QAAQ,CAACG,IAAI,CAAC;EAC1B,CAAC,CAAC,OAAOC,GAAG,EAAE;IACVC,QAAQ,CAAC,wCAAwC,CAAC;EACtD,CAAC,SAAS;IACNC,UAAU,CAAC,KAAK,CAAC;EACrB;AACJ,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}