{"ast":null,"code":"// frontend/src/axiosConfig.js\n// frontend/src/axiosConfig.js\nimport axios from 'axios';\nconst instance = axios.create({\n  baseURL: 'http://localhost:8000/api/'\n});\nexport const fetchCart = async token => {\n  try {\n    const response = await instance.get('/cart/', {\n      headers: {\n        Authorization: `Bearer ${token}`\n      }\n    });\n    return response; // Возвращаем ответ\n  } catch (err) {\n    throw new Error('Ошибка при загрузке корзины');\n  }\n};\nexport default instance;\n\n// import axios from 'axios';\n//\n// import React from 'react';\n// import Cart from './Cart';\n//\n// const App = () => {\n//   const userToken = 'your-user-token'; // Токен пользователя\n//\n//   return (\n//     <div>\n//       <h1>Магазин</h1>\n//       <Cart token={userToken} />\n//     </div>\n//   );\n// };\n//\n// export default App;\n//\n//\n//\n//\n//\n// const instance = axios.create({\n//   baseURL: 'http://localhost:8000/api/',\n// });\n//\n// // Пример функции для загрузки корзины\n// export const fetchCart = async (setCart, setError, setLoading, token) => {\n//   setLoading(true); // Устанавливаем состояние загрузки\n//   try {\n//     const response = await instance.get('/cart/', {\n//       headers: {\n//         Authorization: `Bearer ${token}`,\n//       },\n//     });\n//     setCart(response.data); // Устанавливаем данные корзины\n//   } catch (err) {\n//     setError('Ошибка при загрузке корзины'); // Устанавливаем ошибку\n//   } finally {\n//     setLoading(false); // Сбрасываем состояние загрузки\n//   }\n// };\n//\n// export default instance;\n\n// import axios from 'axios';\n//\n// // Создаем экземпляр axios\n// const axiosInstance = axios.create({\n//     baseURL: 'http://localhost:8000/api',\n// });\n//\n// // Добавляем интерсептор для добавления заголовка Authorization\n// axiosInstance.interceptors.request.use((config) => {\n//     const token = localStorage.getItem('access_token');\n//     if (token) {\n//         config.headers.Authorization = `Bearer ${token}`;\n//     }\n//     return config;\n// }, (error) => {\n//     return Promise.reject(error);\n// });\n//\n// export default axiosInstance;\n//\n// import axiosInstance from './axiosConfig';\n//\n// // Пример запроса в `cart.js`\n// const fetchCart = async () => {\n//     try {\n//         const response = await axiosInstance.get('/cart/');\n//         setCart(response.data);\n//     } catch (err) {\n//         setError(\"Не удалось загрузить данные о корзине.\");\n//     } finally {\n//         setLoading(false);\n//     }\n// };","map":{"version":3,"names":["axios","instance","create","baseURL","fetchCart","token","response","get","headers","Authorization","err","Error"],"sources":["C:/Users/kiyko/MyPythonProject/StazProject/mysite_staz/frontend/src/axiosConfig.js"],"sourcesContent":["// frontend/src/axiosConfig.js\r\n// frontend/src/axiosConfig.js\r\nimport axios from 'axios';\r\n\r\nconst instance = axios.create({\r\n  baseURL: 'http://localhost:8000/api/',\r\n});\r\n\r\nexport const fetchCart = async (token) => {\r\n  try {\r\n    const response = await instance.get('/cart/', {\r\n      headers: {\r\n        Authorization: `Bearer ${token}`,\r\n      },\r\n    });\r\n    return response;  // Возвращаем ответ\r\n  } catch (err) {\r\n    throw new Error('Ошибка при загрузке корзины');\r\n  }\r\n};\r\n\r\nexport default instance;\r\n\r\n\r\n\r\n\r\n\r\n\r\n// import axios from 'axios';\r\n//\r\n// import React from 'react';\r\n// import Cart from './Cart';\r\n//\r\n// const App = () => {\r\n//   const userToken = 'your-user-token'; // Токен пользователя\r\n//\r\n//   return (\r\n//     <div>\r\n//       <h1>Магазин</h1>\r\n//       <Cart token={userToken} />\r\n//     </div>\r\n//   );\r\n// };\r\n//\r\n// export default App;\r\n//\r\n//\r\n//\r\n//\r\n//\r\n// const instance = axios.create({\r\n//   baseURL: 'http://localhost:8000/api/',\r\n// });\r\n//\r\n// // Пример функции для загрузки корзины\r\n// export const fetchCart = async (setCart, setError, setLoading, token) => {\r\n//   setLoading(true); // Устанавливаем состояние загрузки\r\n//   try {\r\n//     const response = await instance.get('/cart/', {\r\n//       headers: {\r\n//         Authorization: `Bearer ${token}`,\r\n//       },\r\n//     });\r\n//     setCart(response.data); // Устанавливаем данные корзины\r\n//   } catch (err) {\r\n//     setError('Ошибка при загрузке корзины'); // Устанавливаем ошибку\r\n//   } finally {\r\n//     setLoading(false); // Сбрасываем состояние загрузки\r\n//   }\r\n// };\r\n//\r\n// export default instance;\r\n\r\n\r\n\r\n\r\n\r\n// import axios from 'axios';\r\n//\r\n// // Создаем экземпляр axios\r\n// const axiosInstance = axios.create({\r\n//     baseURL: 'http://localhost:8000/api',\r\n// });\r\n//\r\n// // Добавляем интерсептор для добавления заголовка Authorization\r\n// axiosInstance.interceptors.request.use((config) => {\r\n//     const token = localStorage.getItem('access_token');\r\n//     if (token) {\r\n//         config.headers.Authorization = `Bearer ${token}`;\r\n//     }\r\n//     return config;\r\n// }, (error) => {\r\n//     return Promise.reject(error);\r\n// });\r\n//\r\n// export default axiosInstance;\r\n//\r\n// import axiosInstance from './axiosConfig';\r\n//\r\n// // Пример запроса в `cart.js`\r\n// const fetchCart = async () => {\r\n//     try {\r\n//         const response = await axiosInstance.get('/cart/');\r\n//         setCart(response.data);\r\n//     } catch (err) {\r\n//         setError(\"Не удалось загрузить данные о корзине.\");\r\n//     } finally {\r\n//         setLoading(false);\r\n//     }\r\n// };\r\n\r\n"],"mappings":"AAAA;AACA;AACA,OAAOA,KAAK,MAAM,OAAO;AAEzB,MAAMC,QAAQ,GAAGD,KAAK,CAACE,MAAM,CAAC;EAC5BC,OAAO,EAAE;AACX,CAAC,CAAC;AAEF,OAAO,MAAMC,SAAS,GAAG,MAAOC,KAAK,IAAK;EACxC,IAAI;IACF,MAAMC,QAAQ,GAAG,MAAML,QAAQ,CAACM,GAAG,CAAC,QAAQ,EAAE;MAC5CC,OAAO,EAAE;QACPC,aAAa,EAAE,UAAUJ,KAAK;MAChC;IACF,CAAC,CAAC;IACF,OAAOC,QAAQ,CAAC,CAAE;EACpB,CAAC,CAAC,OAAOI,GAAG,EAAE;IACZ,MAAM,IAAIC,KAAK,CAAC,6BAA6B,CAAC;EAChD;AACF,CAAC;AAED,eAAeV,QAAQ;;AAOvB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAMA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}