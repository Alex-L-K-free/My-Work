{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\kiyko\\\\MyPythonProject\\\\StazProject\\\\mysite_staz\\\\frontend\\\\src\\\\Login.js\",\n  _s = $RefreshSig$();\n// mysite_staz/frontend/src/login.js\nimport React, { useState } from 'react';\nimport axios from 'axios';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Login = ({\n  setToken\n}) => {\n  _s();\n  const [username, setUsername] = useState('');\n  const [password, setPassword] = useState('');\n  const [error, setError] = useState('');\n  const handleSubmit = async e => {\n    e.preventDefault();\n    setError('');\n    try {\n      const response = await axios.post('http://localhost:8000/api/token/', {\n        username,\n        password\n      });\n      const {\n        access\n      } = response.data;\n      setToken(access);\n      localStorage.setItem('access_token', access);\n      setUsername('');\n      setPassword('');\n    } catch (err) {\n      setError('Неверные данные. Попробуйте снова.');\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"login-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"\\u0410\\u0432\\u0442\\u043E\\u0440\\u0438\\u0437\\u0430\\u0446\\u0438\\u044F\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: handleSubmit,\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"form-group\",\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"username\",\n          children: \"\\u041B\\u043E\\u0433\\u0438\\u043D:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 36,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          id: \"username\",\n          value: username,\n          onChange: e => setUsername(e.target.value),\n          required: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 37,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 35,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"form-group\",\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"password\",\n          children: \"\\u041F\\u0430\\u0440\\u043E\\u043B\\u044C:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 46,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"password\",\n          id: \"password\",\n          value: password,\n          onChange: e => setPassword(e.target.value),\n          required: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 47,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 9\n      }, this), error && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"error\",\n        children: error\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 19\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        children: \"\\u0412\\u043E\\u0439\\u0442\\u0438\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 32,\n    columnNumber: 5\n  }, this);\n};\n_s(Login, \"lABZ+K3zbnEaFQvlduiFXLNOf5A=\");\n_c = Login;\nexport default Login;\n\n// import React, { useState } from 'react';\n// import axios from 'axios';\n//\n// const Login = ({ setToken }) => {\n//     const [username, setUsername] = useState('');\n//     const [password, setPassword] = useState('');\n//     const [error, setError] = useState('');\n//\n//     const handleSubmit = async (e) => {\n//         e.preventDefault();\n//         setError('');  // Сбрасываем ошибку перед новым запросом\n//\n//         try {\n//             const response = await axios.post('http://localhost:8000/api/token/', {\n//                 username,\n//                 password,\n//             });\n//\n//             setToken(response.data.access);\n//             localStorage.setItem('access_token', response.data.access);\n//\n//             setUsername('');\n//             setPassword('');\n//         } catch (err) {\n//             setError('Неверные данные. Попробуйте снова.');\n//         }\n//     };\n//\n//     return (\n//         <div className=\"login-container\">\n//             <h2>Авторизация</h2>\n//             <form onSubmit={handleSubmit}>\n//                 <div className=\"form-group\">\n//                     <label htmlFor=\"username\">Логин:</label>\n//                     <input\n//                         type=\"text\"\n//                         id=\"username\"\n//                         value={username}\n//                         onChange={(e) => setUsername(e.target.value)}\n//                         required\n//                     />\n//                 </div>\n//                 <div className=\"form-group\">\n//                     <label htmlFor=\"password\">Пароль:</label>\n//                     <input\n//                         type=\"password\"\n//                         id=\"password\"\n//                         value={password}\n//                         onChange={(e) => setPassword(e.target.value)}\n//                         required\n//                     />\n//                 </div>\n//                 {error && <div className=\"error\">{error}</div>}\n//                 <button type=\"submit\">Войти</button>\n//             </form>\n//         </div>\n//     );\n// };\n//\n// export default Login;\n//\n\n// import React, { useState } from 'react';\n// import axios from 'axios';\n//\n// const Login = ({ setToken }) => {\n//     // Состояния для хранения данных формы\n//     const [username, setUsername] = useState('');\n//     const [password, setPassword] = useState('');\n//     const [error, setError] = useState('');\n//\n//     // Обработчик отправки формы\n//     const handleSubmit = async (e) => {\n//         e.preventDefault();\n//         setError('');  // Сбрасываем ошибку перед новым запросом\n//\n//         try {\n//             const response = await axios.post('http://localhost:8000/api/token/', {\n//                 username: username,\n//                 password: password,\n//             });\n//\n//             // Если авторизация успешна, сохраняем токен в state\n//             setToken(response.data.access);\n//             localStorage.setItem('access_token', response.data.access);  // Сохраняем токен в localStorage для последующего использования\n//\n//             // Очищаем форму\n//             setUsername('');\n//             setPassword('');\n//         } catch (err) {\n//             setError('Неверные данные. Попробуйте снова.');\n//         }\n//     };\n//\n//     return (\n//         <div className=\"login-container\">\n//             <h2>Авторизация</h2>\n//             <form onSubmit={handleSubmit}>\n//                 <div className=\"form-group\">\n//                     <label htmlFor=\"username\">Логин:</label>\n//                     <input\n//                         type=\"text\"\n//                         id=\"username\"\n//                         value={username}\n//                         onChange={(e) => setUsername(e.target.value)}\n//                         required\n//                     />\n//                 </div>\n//                 <div className=\"form-group\">\n//                     <label htmlFor=\"password\">Пароль:</label>\n//                     <input\n//                         type=\"password\"\n//                         id=\"password\"\n//                         value={password}\n//                         onChange={(e) => setPassword(e.target.value)}\n//                         required\n//                     />\n//                 </div>\n//                 {error && <div className=\"error\">{error}</div>}\n//                 <button type=\"submit\">Войти</button>\n//             </form>\n//         </div>\n//     );\n// };\n//\n// export default Login;\nvar _c;\n$RefreshReg$(_c, \"Login\");","map":{"version":3,"names":["React","useState","axios","jsxDEV","_jsxDEV","Login","setToken","_s","username","setUsername","password","setPassword","error","setError","handleSubmit","e","preventDefault","response","post","access","data","localStorage","setItem","err","className","children","fileName","_jsxFileName","lineNumber","columnNumber","onSubmit","htmlFor","type","id","value","onChange","target","required","_c","$RefreshReg$"],"sources":["C:/Users/kiyko/MyPythonProject/StazProject/mysite_staz/frontend/src/Login.js"],"sourcesContent":["// mysite_staz/frontend/src/login.js\r\nimport React, { useState } from 'react';\r\nimport axios from 'axios';\r\n\r\nconst Login = ({ setToken }) => {\r\n  const [username, setUsername] = useState('');\r\n  const [password, setPassword] = useState('');\r\n  const [error, setError] = useState('');\r\n\r\n  const handleSubmit = async (e) => {\r\n    e.preventDefault();\r\n    setError('');\r\n\r\n    try {\r\n      const response = await axios.post('http://localhost:8000/api/token/', {\r\n        username,\r\n        password,\r\n      });\r\n\r\n      const { access } = response.data;\r\n      setToken(access);\r\n      localStorage.setItem('access_token', access);\r\n\r\n      setUsername('');\r\n      setPassword('');\r\n    } catch (err) {\r\n      setError('Неверные данные. Попробуйте снова.');\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className=\"login-container\">\r\n      <h2>Авторизация</h2>\r\n      <form onSubmit={handleSubmit}>\r\n        <div className=\"form-group\">\r\n          <label htmlFor=\"username\">Логин:</label>\r\n          <input\r\n            type=\"text\"\r\n            id=\"username\"\r\n            value={username}\r\n            onChange={(e) => setUsername(e.target.value)}\r\n            required\r\n          />\r\n        </div>\r\n        <div className=\"form-group\">\r\n          <label htmlFor=\"password\">Пароль:</label>\r\n          <input\r\n            type=\"password\"\r\n            id=\"password\"\r\n            value={password}\r\n            onChange={(e) => setPassword(e.target.value)}\r\n            required\r\n          />\r\n        </div>\r\n        {error && <div className=\"error\">{error}</div>}\r\n        <button type=\"submit\">Войти</button>\r\n      </form>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Login;\r\n\r\n\r\n\r\n\r\n// import React, { useState } from 'react';\r\n// import axios from 'axios';\r\n//\r\n// const Login = ({ setToken }) => {\r\n//     const [username, setUsername] = useState('');\r\n//     const [password, setPassword] = useState('');\r\n//     const [error, setError] = useState('');\r\n//\r\n//     const handleSubmit = async (e) => {\r\n//         e.preventDefault();\r\n//         setError('');  // Сбрасываем ошибку перед новым запросом\r\n//\r\n//         try {\r\n//             const response = await axios.post('http://localhost:8000/api/token/', {\r\n//                 username,\r\n//                 password,\r\n//             });\r\n//\r\n//             setToken(response.data.access);\r\n//             localStorage.setItem('access_token', response.data.access);\r\n//\r\n//             setUsername('');\r\n//             setPassword('');\r\n//         } catch (err) {\r\n//             setError('Неверные данные. Попробуйте снова.');\r\n//         }\r\n//     };\r\n//\r\n//     return (\r\n//         <div className=\"login-container\">\r\n//             <h2>Авторизация</h2>\r\n//             <form onSubmit={handleSubmit}>\r\n//                 <div className=\"form-group\">\r\n//                     <label htmlFor=\"username\">Логин:</label>\r\n//                     <input\r\n//                         type=\"text\"\r\n//                         id=\"username\"\r\n//                         value={username}\r\n//                         onChange={(e) => setUsername(e.target.value)}\r\n//                         required\r\n//                     />\r\n//                 </div>\r\n//                 <div className=\"form-group\">\r\n//                     <label htmlFor=\"password\">Пароль:</label>\r\n//                     <input\r\n//                         type=\"password\"\r\n//                         id=\"password\"\r\n//                         value={password}\r\n//                         onChange={(e) => setPassword(e.target.value)}\r\n//                         required\r\n//                     />\r\n//                 </div>\r\n//                 {error && <div className=\"error\">{error}</div>}\r\n//                 <button type=\"submit\">Войти</button>\r\n//             </form>\r\n//         </div>\r\n//     );\r\n// };\r\n//\r\n// export default Login;\r\n//\r\n\r\n\r\n\r\n// import React, { useState } from 'react';\r\n// import axios from 'axios';\r\n//\r\n// const Login = ({ setToken }) => {\r\n//     // Состояния для хранения данных формы\r\n//     const [username, setUsername] = useState('');\r\n//     const [password, setPassword] = useState('');\r\n//     const [error, setError] = useState('');\r\n//\r\n//     // Обработчик отправки формы\r\n//     const handleSubmit = async (e) => {\r\n//         e.preventDefault();\r\n//         setError('');  // Сбрасываем ошибку перед новым запросом\r\n//\r\n//         try {\r\n//             const response = await axios.post('http://localhost:8000/api/token/', {\r\n//                 username: username,\r\n//                 password: password,\r\n//             });\r\n//\r\n//             // Если авторизация успешна, сохраняем токен в state\r\n//             setToken(response.data.access);\r\n//             localStorage.setItem('access_token', response.data.access);  // Сохраняем токен в localStorage для последующего использования\r\n//\r\n//             // Очищаем форму\r\n//             setUsername('');\r\n//             setPassword('');\r\n//         } catch (err) {\r\n//             setError('Неверные данные. Попробуйте снова.');\r\n//         }\r\n//     };\r\n//\r\n//     return (\r\n//         <div className=\"login-container\">\r\n//             <h2>Авторизация</h2>\r\n//             <form onSubmit={handleSubmit}>\r\n//                 <div className=\"form-group\">\r\n//                     <label htmlFor=\"username\">Логин:</label>\r\n//                     <input\r\n//                         type=\"text\"\r\n//                         id=\"username\"\r\n//                         value={username}\r\n//                         onChange={(e) => setUsername(e.target.value)}\r\n//                         required\r\n//                     />\r\n//                 </div>\r\n//                 <div className=\"form-group\">\r\n//                     <label htmlFor=\"password\">Пароль:</label>\r\n//                     <input\r\n//                         type=\"password\"\r\n//                         id=\"password\"\r\n//                         value={password}\r\n//                         onChange={(e) => setPassword(e.target.value)}\r\n//                         required\r\n//                     />\r\n//                 </div>\r\n//                 {error && <div className=\"error\">{error}</div>}\r\n//                 <button type=\"submit\">Войти</button>\r\n//             </form>\r\n//         </div>\r\n//     );\r\n// };\r\n//\r\n// export default Login;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}