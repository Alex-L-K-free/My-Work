{"ast":null,"code":"// mysite_staz/frontend/src/cart.js\n\n// import React, { useState, useEffect } from 'react';\n// import { fetchCart } from './axiosConfig';\n//\n// const Cart = ({ token }) => {\n//   const [cart, setCart] = useState([]);\n//   const [error, setError] = useState(null);\n//   const [loading, setLoading] = useState(true);\n//\n//   useEffect(() => {\n//     fetchCart(setCart, setError, setLoading, token);\n//   }, [token]);\n//\n//   if (loading) return <div>Загрузка...</div>;\n//   if (error) return <div>{error}</div>;\n//\n//   return (\n//     <div>\n//       <h2>Ваша корзина</h2>\n//       <ul>\n//         {cart.length === 0 ? (\n//           <li>Ваша корзина пуста</li>\n//         ) : (\n//           cart.map((item) => (\n//             <li key={item.id}>\n//               {item.name} - {item.price} руб.\n//             </li>\n//           ))\n//         )}\n//       </ul>\n//     </div>\n//   );\n// };\n//\n// export default Cart;\n\n// import React, { useState, useEffect } from 'react';\n// import { fetchCart } from './axiosConfig';\n// // import axios from 'axios';\n//\n// const Cart = ({ token }) => {\n//   const [cart, setCart] = useState([]);\n//   const [error, setError] = useState(null);\n//   const [loading, setLoading] = useState(true);\n//\n//   useEffect(() => {\n//     const fetchCart = async () => {\n//       try {\n//         const response = await axios.get('http://localhost:8000/api/cart/', {\n//           headers: { Authorization: `Bearer ${token}` },\n//         });\n//         setCart(response.data);\n//       } catch (err) {\n//         setError('Не удалось загрузить данные о корзине.');\n//       } finally {\n//         setLoading(false);\n//       }\n//     };\n//\n//     fetchCart();\n//   }, [token]);\n//\n//   if (loading) return <div>Загрузка...</div>;\n//\n//   if (error) return <div>{error}</div>;\n//\n//   return (\n//     <div>\n//       <h2>Ваша корзина</h2>\n//       <ul>\n//         {cart.length === 0 ? (\n//           <li>Ваша корзина пуста</li>\n//         ) : (\n//           cart.map((item) => (\n//             <li key={item.id}>\n//               {item.name} - {item.price} руб.\n//             </li>\n//           ))\n//         )}\n//       </ul>\n//     </div>\n//   );\n// };\n//\n// export default Cart;\n\n// import React, { useState, useEffect } from \"react\";\n// import axios from \"axiosInstance \";\n//\n// const Cart = () => {\n//     const [cart, setCart] = useState([]);\n//     const [error, setError] = useState(null);\n//     const [loading, setLoading] = useState(true);  // Установим начальное значение loading в true\n//\n//     useEffect(() => {\n//         const fetchCart = async () => {\n//             try {\n//                 const response = await axios.get(\"http://localhost:8000/api/cart/\");\n//                 setCart(response.data);  // Записываем данные в состояние\n//             } catch (err) {\n//                 setError(\"Не удалось загрузить данные о корзине.\");\n//             } finally {\n//                 setLoading(false);  // Завершаем загрузку\n//             }\n//         };\n//\n//         fetchCart();\n//     }, []);  // Пустой массив, чтобы выполнить эффект только один раз при монтировании компонента\n//\n//     if (loading) {\n//         return <div>Загрузка...</div>;\n//     }\n//\n//     if (error) {\n//         return <div>{error}</div>;\n//     }\n//\n//     return (\n//         <div>\n//             <h2>Ваша корзина</h2>\n//             <ul>\n//                 {cart.length === 0 ? (\n//                     <li>Ваша корзина пуста</li>\n//                 ) : (\n//                     cart.map(item => (\n//                         <li key={item.id}>\n//                             {item.name} - {item.price} руб.\n//                         </li>\n//                     ))\n//                 )}\n//             </ul>\n//         </div>\n//     );\n// };\n//\n// export default Cart;","map":{"version":3,"names":[],"sources":["C:/Users/kiyko/MyPythonProject/StazProject/mysite_staz/frontend/src/Cart.js"],"sourcesContent":["// mysite_staz/frontend/src/cart.js\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n// import React, { useState, useEffect } from 'react';\r\n// import { fetchCart } from './axiosConfig';\r\n//\r\n// const Cart = ({ token }) => {\r\n//   const [cart, setCart] = useState([]);\r\n//   const [error, setError] = useState(null);\r\n//   const [loading, setLoading] = useState(true);\r\n//\r\n//   useEffect(() => {\r\n//     fetchCart(setCart, setError, setLoading, token);\r\n//   }, [token]);\r\n//\r\n//   if (loading) return <div>Загрузка...</div>;\r\n//   if (error) return <div>{error}</div>;\r\n//\r\n//   return (\r\n//     <div>\r\n//       <h2>Ваша корзина</h2>\r\n//       <ul>\r\n//         {cart.length === 0 ? (\r\n//           <li>Ваша корзина пуста</li>\r\n//         ) : (\r\n//           cart.map((item) => (\r\n//             <li key={item.id}>\r\n//               {item.name} - {item.price} руб.\r\n//             </li>\r\n//           ))\r\n//         )}\r\n//       </ul>\r\n//     </div>\r\n//   );\r\n// };\r\n//\r\n// export default Cart;\r\n\r\n\r\n\r\n\r\n\r\n\r\n// import React, { useState, useEffect } from 'react';\r\n// import { fetchCart } from './axiosConfig';\r\n// // import axios from 'axios';\r\n//\r\n// const Cart = ({ token }) => {\r\n//   const [cart, setCart] = useState([]);\r\n//   const [error, setError] = useState(null);\r\n//   const [loading, setLoading] = useState(true);\r\n//\r\n//   useEffect(() => {\r\n//     const fetchCart = async () => {\r\n//       try {\r\n//         const response = await axios.get('http://localhost:8000/api/cart/', {\r\n//           headers: { Authorization: `Bearer ${token}` },\r\n//         });\r\n//         setCart(response.data);\r\n//       } catch (err) {\r\n//         setError('Не удалось загрузить данные о корзине.');\r\n//       } finally {\r\n//         setLoading(false);\r\n//       }\r\n//     };\r\n//\r\n//     fetchCart();\r\n//   }, [token]);\r\n//\r\n//   if (loading) return <div>Загрузка...</div>;\r\n//\r\n//   if (error) return <div>{error}</div>;\r\n//\r\n//   return (\r\n//     <div>\r\n//       <h2>Ваша корзина</h2>\r\n//       <ul>\r\n//         {cart.length === 0 ? (\r\n//           <li>Ваша корзина пуста</li>\r\n//         ) : (\r\n//           cart.map((item) => (\r\n//             <li key={item.id}>\r\n//               {item.name} - {item.price} руб.\r\n//             </li>\r\n//           ))\r\n//         )}\r\n//       </ul>\r\n//     </div>\r\n//   );\r\n// };\r\n//\r\n// export default Cart;\r\n\r\n\r\n// import React, { useState, useEffect } from \"react\";\r\n// import axios from \"axiosInstance \";\r\n//\r\n// const Cart = () => {\r\n//     const [cart, setCart] = useState([]);\r\n//     const [error, setError] = useState(null);\r\n//     const [loading, setLoading] = useState(true);  // Установим начальное значение loading в true\r\n//\r\n//     useEffect(() => {\r\n//         const fetchCart = async () => {\r\n//             try {\r\n//                 const response = await axios.get(\"http://localhost:8000/api/cart/\");\r\n//                 setCart(response.data);  // Записываем данные в состояние\r\n//             } catch (err) {\r\n//                 setError(\"Не удалось загрузить данные о корзине.\");\r\n//             } finally {\r\n//                 setLoading(false);  // Завершаем загрузку\r\n//             }\r\n//         };\r\n//\r\n//         fetchCart();\r\n//     }, []);  // Пустой массив, чтобы выполнить эффект только один раз при монтировании компонента\r\n//\r\n//     if (loading) {\r\n//         return <div>Загрузка...</div>;\r\n//     }\r\n//\r\n//     if (error) {\r\n//         return <div>{error}</div>;\r\n//     }\r\n//\r\n//     return (\r\n//         <div>\r\n//             <h2>Ваша корзина</h2>\r\n//             <ul>\r\n//                 {cart.length === 0 ? (\r\n//                     <li>Ваша корзина пуста</li>\r\n//                 ) : (\r\n//                     cart.map(item => (\r\n//                         <li key={item.id}>\r\n//                             {item.name} - {item.price} руб.\r\n//                         </li>\r\n//                     ))\r\n//                 )}\r\n//             </ul>\r\n//         </div>\r\n//     );\r\n// };\r\n//\r\n// export default Cart;\r\n\r\n"],"mappings":"AAAA;;AAQA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAOA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}